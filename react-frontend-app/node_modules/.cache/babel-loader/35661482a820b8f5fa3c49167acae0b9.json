{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactprojects\\\\my-app\\\\src\\\\components\\\\DisplayCountries.js\";\nimport React from 'react';\nimport RowCreator from './RowCreator';\nimport Axios from 'axios';\nvar TESTCOUNTRIES = [{\n  coic: \"ALG\",\n  name: \"Algerai\",\n  capital: \"St. Ann\",\n  region: \"Asia\",\n  subregion: \"Southeast\"\n}, {\n  coic: \"USA\",\n  name: \"United States\",\n  capital: \"Washington DC\",\n  region: \"North America\",\n  subregion: \"America\"\n}, {\n  coic: \"BZL\",\n  name: \"Brazil\",\n  capital: \"Santigo\",\n  region: \"South America\",\n  subregion: \"South America\"\n}];\n\nclass DisplayCountries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      countriesClone: []\n    };\n  }\n\n  componentDidMount() {\n    const axios = require('axios');\n\n    const url = 'http://localhost:8080/demo/api/countries';\n    axios.get(url).then(res => {\n      console.log(res.data);\n      this.setState({\n        countries: res.data,\n        countriesClone: res.data\n      });\n    }).catch(error => {\n      console.error('Error', error);\n    });\n  }\n\n  handleOnChange(event) {\n    var filteredString = event.target.value;\n    var filteredCountries = [];\n\n    for (var country of this.state.countries) {\n      if (country.id.toLowerCase().indexOf(filteredString.toLowerCase()) >= 0 || country.name.toLowerCase().indexOf(filteredString.toLowerCase()) >= 0) {\n        filteredCountries.push(country);\n      }\n    }\n\n    this.setState({\n      countriesClone: filteredCountries\n    });\n  }\n\n  render() {\n    //var countries2 = [{id:\"ALG\", name:\"Algerai\", capital:\"St. Ann\", region:\"Asia\", subregion:\"Southeast\"},\n    //{id:\"USA\", name:\"United States\", capital:\"Washington DC\", region:\"North America\", subregion:\"America\"},\n    //{id:\"BZL\", name:\"Brazil\", capital:\"Santigo\", region:\"South America\", subregion:\"South America\"}];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Search Countries 2\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name\",\n      onChange: this.handleOnChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"COIC\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Capital\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Region\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sub Region\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.countriesClone.map(country => React.createElement(RowCreator, {\n      item: country,\n      key: country.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default DisplayCountries;","map":{"version":3,"sources":["D:/reactprojects/my-app/src/components/DisplayCountries.js"],"names":["React","RowCreator","Axios","TESTCOUNTRIES","coic","name","capital","region","subregion","DisplayCountries","Component","constructor","props","state","countries","countriesClone","componentDidMount","axios","require","url","get","then","res","console","log","data","setState","catch","error","handleOnChange","event","filteredString","target","value","filteredCountries","country","id","toLowerCase","indexOf","push","render","bind","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport RowCreator from './RowCreator';\r\nimport Axios from 'axios';\r\n\r\nvar TESTCOUNTRIES = [{coic:\"ALG\", name:\"Algerai\", capital:\"St. Ann\", region:\"Asia\", subregion:\"Southeast\"},\r\n{coic:\"USA\", name:\"United States\", capital:\"Washington DC\", region:\"North America\", subregion:\"America\"},\r\n{coic:\"BZL\", name:\"Brazil\", capital:\"Santigo\", region:\"South America\", subregion:\"South America\"}];\r\n\r\n\r\n\r\nclass DisplayCountries extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {countries:[],\r\n                      countriesClone:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const axios = require('axios');\r\n        const url = 'http://localhost:8080/demo/api/countries';\r\n        axios.get(url).then(res=>{\r\n            console.log(res.data);\r\n            this.setState({countries:res.data,\r\n                           countriesClone:res.data});\r\n\r\n        }).catch(error=>{\r\n            console.error('Error', error);\r\n        })\r\n      }\r\n\r\n    handleOnChange(event){\r\n        var filteredString = event.target.value;\r\n        var filteredCountries = [];\r\n\r\n        for(var country of this.state.countries){\r\n            if(country.id.toLowerCase().indexOf(filteredString.toLowerCase())>=0 ||\r\n                country.name.toLowerCase().indexOf(filteredString.toLowerCase())>=0){\r\n                    filteredCountries.push(country);\r\n            }\r\n        }\r\n\r\n        this.setState({countriesClone:filteredCountries});\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        //var countries2 = [{id:\"ALG\", name:\"Algerai\", capital:\"St. Ann\", region:\"Asia\", subregion:\"Southeast\"},\r\n        //{id:\"USA\", name:\"United States\", capital:\"Washington DC\", region:\"North America\", subregion:\"America\"},\r\n        //{id:\"BZL\", name:\"Brazil\", capital:\"Santigo\", region:\"South America\", subregion:\"South America\"}];\r\n\r\n\r\n        return (<div>\r\n\r\n            <h1>Search Countries 2</h1>\r\n            <p><input type=\"text\" placeholder=\"Search by name\" onChange={this.handleOnChange.bind(this)}/></p>\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>COIC</th>\r\n                            <th>Country</th>\r\n                            <th>Capital</th>\r\n                            <th>Region</th>\r\n                            <th>Sub Region</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.countriesClone.map(country => <RowCreator item={country} key={country.id}/>)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default DisplayCountries;"]},"metadata":{},"sourceType":"module"}